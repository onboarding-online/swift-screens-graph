//
// RgbaShadowMask.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

/** rgba shadow mask e.g. rgba(0, 0, 0, 0.8) 25% */
public struct RgbaShadowMask: Codable, JSONEncodable, Hashable {

    public var r: Double
    public var g: Double
    public var b: Double
    public var a: Double
    public var p: Double?

    public init(r: Double, g: Double, b: Double, a: Double, p: Double? = nil) {
        self.r = r
        self.g = g
        self.b = b
        self.a = a
        self.p = p
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case r
        case g
        case b
        case a
        case p
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encode(r, forKey: .r)
        try container.encode(g, forKey: .g)
        try container.encode(b, forKey: .b)
        try container.encode(a, forKey: .a)
        try container.encodeIfPresent(p, forKey: .p)
    }
}

