//
// ScreenBasicPaywallBlockAllOf.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

/** Styles for ScreenBasicPaywall */
public struct ScreenBasicPaywallBlockAllOf: Codable, JSONEncodable, Hashable {

    public var bodyColor: String?
    public var bodyOpacity: String?
    public var imageVerticalPosition: PaywallImageVerticalPositionKind?
    public var bodyBackgroundColor: String?
    public var bodyBackgroundOpacity: Double?
    public var bodyKind: BasicPaywallBodyKind?
    public var bodyStyle: BasicPaywallBodyStyle?
    public var blur: BlurKind?

    public init(bodyColor: String? = nil, bodyOpacity: String? = nil, imageVerticalPosition: PaywallImageVerticalPositionKind? = nil, bodyBackgroundColor: String? = nil, bodyBackgroundOpacity: Double? = nil, bodyKind: BasicPaywallBodyKind? = nil, bodyStyle: BasicPaywallBodyStyle? = nil, blur: BlurKind? = nil) {
        self.bodyColor = bodyColor
        self.bodyOpacity = bodyOpacity
        self.imageVerticalPosition = imageVerticalPosition
        self.bodyBackgroundColor = bodyBackgroundColor
        self.bodyBackgroundOpacity = bodyBackgroundOpacity
        self.bodyKind = bodyKind
        self.bodyStyle = bodyStyle
        self.blur = blur
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case bodyColor
        case bodyOpacity
        case imageVerticalPosition
        case bodyBackgroundColor
        case bodyBackgroundOpacity
        case bodyKind
        case bodyStyle
        case blur
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encodeIfPresent(bodyColor, forKey: .bodyColor)
        try container.encodeIfPresent(bodyOpacity, forKey: .bodyOpacity)
        try container.encodeIfPresent(imageVerticalPosition, forKey: .imageVerticalPosition)
        try container.encodeIfPresent(bodyBackgroundColor, forKey: .bodyBackgroundColor)
        try container.encodeIfPresent(bodyBackgroundOpacity, forKey: .bodyBackgroundOpacity)
        try container.encodeIfPresent(bodyKind, forKey: .bodyKind)
        try container.encodeIfPresent(bodyStyle, forKey: .bodyStyle)
        try container.encodeIfPresent(blur, forKey: .blur)
    }
}

