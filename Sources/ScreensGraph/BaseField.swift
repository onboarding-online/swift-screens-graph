//
// BaseField.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

/** Base field element */
public struct BaseField: Codable, JSONEncodable, Hashable {

    public var type: FieldType
    public var subtype: FieldSubtype?
    public var validationRegex: String?
    public var errorMessage: BaseText?
    public var placeholder: BaseText
    /** Field value */
    public var value: String
    public var styles: FieldBlock

    public init(type: FieldType, subtype: FieldSubtype? = nil, validationRegex: String? = nil, errorMessage: BaseText? = nil, placeholder: BaseText, value: String, styles: FieldBlock) {
        self.type = type
        self.subtype = subtype
        self.validationRegex = validationRegex
        self.errorMessage = errorMessage
        self.placeholder = placeholder
        self.value = value
        self.styles = styles
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case type
        case subtype
        case validationRegex
        case errorMessage
        case placeholder
        case value
        case styles
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encode(type, forKey: .type)
        try container.encodeIfPresent(subtype, forKey: .subtype)
        try container.encodeIfPresent(validationRegex, forKey: .validationRegex)
        try container.encodeIfPresent(errorMessage, forKey: .errorMessage)
        try container.encode(placeholder, forKey: .placeholder)
        try container.encode(value, forKey: .value)
        try container.encode(styles, forKey: .styles)
    }
}

