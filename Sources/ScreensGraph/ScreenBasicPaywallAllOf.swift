//
// ScreenBasicPaywallAllOf.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

/** Screen basic paywall */
public struct ScreenBasicPaywallAllOf: Codable, JSONEncodable, Hashable {

    public var screenBasicPaywall: String
    public var title: Text
    public var subtitle: Text
    public var image: Image?
    public var video: Video?
    public var list: RegularList
    public var styles: ScreenBasicPaywallBlock

    public init(screenBasicPaywall: String, title: Text, subtitle: Text, image: Image? = nil, video: Video? = nil, list: RegularList, styles: ScreenBasicPaywallBlock) {
        self.screenBasicPaywall = screenBasicPaywall
        self.title = title
        self.subtitle = subtitle
        self.image = image
        self.video = video
        self.list = list
        self.styles = styles
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case screenBasicPaywall
        case title
        case subtitle
        case image
        case video
        case list
        case styles
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encode(screenBasicPaywall, forKey: .screenBasicPaywall)
        try container.encode(title, forKey: .title)
        try container.encode(subtitle, forKey: .subtitle)
        try container.encodeIfPresent(image, forKey: .image)
        try container.encodeIfPresent(video, forKey: .video)
        try container.encode(list, forKey: .list)
        try container.encode(styles, forKey: .styles)
    }
}

