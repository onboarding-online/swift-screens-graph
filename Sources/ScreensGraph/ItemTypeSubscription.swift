//
// ItemTypeSubscription.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

/** Structure of full collection item type for subscription list */
public struct ItemTypeSubscription: Codable, JSONEncodable, Hashable {

    public var subscriptionId: String
    public var checkBox: CheckBox
    public var leftLabelTop: Text
    public var leftLabelBottom: Text
    public var rightLabelTop: Text
    public var rightLabelBottom: Text
    public var isSelected: Bool
    public var badge: Badge?
    public var image: Image?
    public var box: Box
    public var weight: Double
    public var styles: ItemTypeSubscriptionBlock

    public init(subscriptionId: String, checkBox: CheckBox, leftLabelTop: Text, leftLabelBottom: Text, rightLabelTop: Text, rightLabelBottom: Text, isSelected: Bool, badge: Badge? = nil, image: Image? = nil, box: Box, weight: Double, styles: ItemTypeSubscriptionBlock) {
        self.subscriptionId = subscriptionId
        self.checkBox = checkBox
        self.leftLabelTop = leftLabelTop
        self.leftLabelBottom = leftLabelBottom
        self.rightLabelTop = rightLabelTop
        self.rightLabelBottom = rightLabelBottom
        self.isSelected = isSelected
        self.badge = badge
        self.image = image
        self.box = box
        self.weight = weight
        self.styles = styles
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case subscriptionId
        case checkBox
        case leftLabelTop
        case leftLabelBottom
        case rightLabelTop
        case rightLabelBottom
        case isSelected
        case badge
        case image
        case box
        case weight
        case styles
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encode(subscriptionId, forKey: .subscriptionId)
        try container.encode(checkBox, forKey: .checkBox)
        try container.encode(leftLabelTop, forKey: .leftLabelTop)
        try container.encode(leftLabelBottom, forKey: .leftLabelBottom)
        try container.encode(rightLabelTop, forKey: .rightLabelTop)
        try container.encode(rightLabelBottom, forKey: .rightLabelBottom)
        try container.encode(isSelected, forKey: .isSelected)
        try container.encodeIfPresent(badge, forKey: .badge)
        try container.encodeIfPresent(image, forKey: .image)
        try container.encode(box, forKey: .box)
        try container.encode(weight, forKey: .weight)
        try container.encode(styles, forKey: .styles)
    }
}

