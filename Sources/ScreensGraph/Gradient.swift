//
// Gradient.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

/** Describe gradient */
public struct Gradient: Codable, JSONEncodable, Hashable {

    /** List of colors */
    public var colors: [String]
    /** List of locations */
    public var locations: [Double]?
    public var startPoint: XYPoint
    public var endPoint: XYPoint
    public var gradientKind: GradientKind?
    /** Height in percentage */
    public var heightPercentage: Double?

    public init(colors: [String], locations: [Double]? = nil, startPoint: XYPoint, endPoint: XYPoint, gradientKind: GradientKind? = nil, heightPercentage: Double? = nil) {
        self.colors = colors
        self.locations = locations
        self.startPoint = startPoint
        self.endPoint = endPoint
        self.gradientKind = gradientKind
        self.heightPercentage = heightPercentage
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case colors
        case locations
        case startPoint
        case endPoint
        case gradientKind
        case heightPercentage
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encode(colors, forKey: .colors)
        try container.encodeIfPresent(locations, forKey: .locations)
        try container.encode(startPoint, forKey: .startPoint)
        try container.encode(endPoint, forKey: .endPoint)
        try container.encodeIfPresent(gradientKind, forKey: .gradientKind)
        try container.encodeIfPresent(heightPercentage, forKey: .heightPercentage)
    }
}

